# FROM cudabase-dev
FROM w251/cuda:dev-tx2-4.3_b132

# NOTE: run with: sudo docker run -e DISPLAY=$DISPLAY --net=host --privileged  --rm --env QT_X11_NO_MITSHM=1 face-detect

ARG URL=http://169.44.201.108:7002/jetpacks/4.3

RUN apt-get update && apt install -y git pkg-config wget build-essential cmake unzip


WORKDIR /tmp
# RUN rm *.deb

RUN curl $URL/libopencv_3.3.1-2-g31ccdfe11_arm64.deb  -so libopencv_3.3.1-2-g31ccdfe11_arm64.deb
RUN curl $URL/libopencv-dev_3.3.1-2-g31ccdfe11_arm64.deb -so libopencv-dev_3.3.1-2-g31ccdfe11_arm64.deb
RUN curl $URL/libopencv-python_3.3.1-2-g31ccdfe11_arm64.deb -so libopencv-python_3.3.1-2-g31ccdfe11_arm64.deb

RUN apt remove -y libopencv-calib3d-dev libopencv-core-dev 

RUN apt install -y  libtbb-dev libavcodec-dev libavformat-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgtk2.0-dev
RUN apt install -y libswscale-dev libv4l-dev
RUN dpkg -i *.deb



RUN apt install -y libcanberra-gtk-module libcanberra-gtk3-module libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev 


######
# Below is amendments to the Dockerfile.yolo specific for numpy, MQTT

# required to run opencv face detect
RUN apt-get install -y python-dev python-tk python-numpy python3-dev python3-tk python3-numpy python3-pip
RUN apt-get clean

# Install MQTT for python
RUN pip3 install paho-mqtt

# Copy required files into docker container
WORKDIR /
COPY opencv_faceDetector.py .
COPY haarcascade_frontalface_default.xml .


# Run following command when running container
CMD python3 opencv_faceDetector.py


RUN rm -f /tmp/*.deb


